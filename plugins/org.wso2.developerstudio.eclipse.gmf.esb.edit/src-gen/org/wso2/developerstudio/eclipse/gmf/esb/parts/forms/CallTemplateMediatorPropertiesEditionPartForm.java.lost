
Tue Oct 13 17:52:44 IST 2020
================================================================================
Start of user code
		propertiesStep.addStep(EsbViewsRepository.CallTemplateMediator.Properties.commentsList);
		propertiesStep.addStep(EsbViewsRepository.CallTemplateMediator.Properties.reverse);
		propertiesStep.addStep(EsbViewsRepository.CallTemplateMediator.Properties.availableTemplates);
		propertiesStep.addStep(EsbViewsRepository.CallTemplateMediator.Properties.templateParameters);
		propertiesStep.addStep(EsbViewsRepository.CallTemplateMediator.Properties.targetTemplate);
        propertiesStep.addStep(EsbViewsRepository.CallTemplateMediator.Properties.onError);
		propertiesStep.addStep(EsbViewsRepository.CallTemplateMediator.Properties.description);
		
		composer = new PartComposer(callTemplateMediatorStep) {

			@Override
			public Composite addToPart(Composite parent, Object key) {
				if (key == EsbViewsRepository.CallTemplateMediator.Properties.class) {
					return createPropertiesGroup(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.CallTemplateMediator.Properties.commentsList) {
					return createCommentsListMultiValuedEditor(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.CallTemplateMediator.Properties.reverse) {
					return createReverseCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.CallTemplateMediator.Properties.availableTemplates) {
					return createAvailableTemplatesText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.CallTemplateMediator.Properties.templateParameters) {
					return createTemplateParametersTableComposition(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.CallTemplateMediator.Properties.onError) {
                    return createOnErrorWidget(widgetFactory, parent);
                }
				if (key == EsbViewsRepository.CallTemplateMediator.Properties.targetTemplate) {
					return createTargetTemplateText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.CallTemplateMediator.Properties.description) {
					return createDescriptionText(widgetFactory, parent);
				}
				// End of user code
