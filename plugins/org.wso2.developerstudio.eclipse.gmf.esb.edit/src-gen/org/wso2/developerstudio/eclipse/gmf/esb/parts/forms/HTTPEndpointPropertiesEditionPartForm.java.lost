
Tue Oct 13 17:52:39 IST 2020
================================================================================
Start of user code
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.class) {
					return createPropertiesGroup(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.commentsList) {
					return createCommentsListMultiValuedEditor(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.endPointName) {
					return createEndPointNameText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.anonymous) {
					return createAnonymousCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.inLine) {
					return createInLineCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.duplicate) {
					return createDuplicateCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.reversed) {
					return createReversedCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.reliableMessagingEnabled) {
					return createReliableMessagingEnabledCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.securityEnabled) {
					return createSecurityEnabledCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.addressingEnabled) {
					return createAddressingEnabledCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.addressingVersion) {
					return createAddressingVersionEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.addressingSeparateListener) {
					return createAddressingSeparateListenerCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.format) {
					return createFormatEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.optimize) {
					return createOptimizeEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Properties.templateParameters) {
					return createTemplateParametersTableComposition(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Basic.class) {
					return createBasicGroup(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Basic.statisticsEnabled) {
					return createStatisticsEnabledCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Basic.traceEnabled) {
					return createTraceEnabledCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Basic.uRITemplate) {
					return createURITemplateText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Basic.httpMethod) {
					return createHttpMethodEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointDescription.class) {
					return createEndpointDescriptionGroup(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointDescription.description) {
					return createDescriptionText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointProperties.class) {
					return createEndpointPropertiesGroup(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointProperties.properties) {
					return createPropertiesTableComposition(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointSuspendState.class) {
					return createEndpointSuspendStateGroup(widgetFactory, filterAdvancedSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointSuspendState.suspendErrorCodes) {
					return createSuspendErrorCodesText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointSuspendState.suspendInitialDuration) {
					return createSuspendInitialDurationText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointSuspendState.suspendMaximumDuration) {
					return createSuspendMaximumDurationText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointSuspendState.suspendProgressionFactor) {
					return createSuspendProgressionFactorText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointTimeoutState.class) {
					return createEndpointTimeoutStateGroup(widgetFactory, filterAdvancedSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointTimeoutState.retryErrorCodes) {
					return createRetryErrorCodesText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointTimeoutState.retryCount) {
					return createRetryCountText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.EndpointTimeoutState.retryDelay) {
					return createRetryDelayText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Timeout.class) {
					return createTimeoutGroup(widgetFactory, filterAdvancedSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Timeout.timeOutDuration) {
					return createTimeOutDurationText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.Timeout.timeOutAction) {
					return createTimeOutActionEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.HTTPEndpoint.FailoverErrorCodes.class) {
                    return createFailoverErrorCodesGroup(widgetFactory, filterAdvancedSubPropertiesGroup);
                }
				if (key == EsbViewsRepository.HTTPEndpoint.FailoverErrorCodes.failoverNonRetryErrorCodes) {
                    return createFailoverNonRetryErrorCodesText(widgetFactory, parent);
                }
				// End of user code
Start of user code for
	protected Text failoverNonRetryErrorCodes;
	protected Composite failoverErrorCodesGroup;
	protected Control[] failoverNonRetryErrorCodesElements;
	
	protected Section propertiesSection;
	protected Composite filterAdvancedSubPropertiesGroup;
	// End of user code
