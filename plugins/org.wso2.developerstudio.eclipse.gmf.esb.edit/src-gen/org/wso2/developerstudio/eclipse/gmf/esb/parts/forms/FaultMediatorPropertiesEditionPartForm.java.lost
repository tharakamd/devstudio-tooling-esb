
Tue Oct 13 17:52:41 IST 2020
================================================================================
Start of user code
				if (key == EsbViewsRepository.FaultMediator.Properties.class) {
					return createPropertiesGroup(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.description) {
					return createDescriptionText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.commentsList) {
					return createCommentsListMultiValuedEditor(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.reverse) {
					return createReverseCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.soapVersion) {
					return createSoapVersionEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.serializeResponse) {
					return createSerializeResponseCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.markAsResponse) {
					return createMarkAsResponseCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.faultCodeSoap11) {
					return createFaultCodeSoap11EMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.faultCodeType) {
					return createFaultCodeTypeEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.faultStringType) {
					return createFaultStringTypeEMFComboViewer(widgetFactory, filterReasonSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.faultStringValue) {
					return createFaultStringValueText(widgetFactory, filterReasonSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.faultActor) {
					return createFaultActorText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.faultCodeSoap12) {
					return createFaultCodeSoap12EMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.faultReasonType) {
					return createFaultReasonTypeEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.faultReasonValue) {
					return createFaultReasonValueText(widgetFactory, filterReasonSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.roleName) {
					return createRoleNameText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.nodeName) {
					return createNodeNameText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.faultDetailType) {
					return createFaultDetailTypeEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.FaultMediator.Properties.faultDetailValue) {
					return createFaultDetailValueText(widgetFactory, filterDetailSubPropertiesGroup);
				}
                if (key == EsbViewsRepository.FaultMediator.Properties.faultStringExpression) {
                    return createFaultStringExpressionText(widgetFactory, filterReasonSubPropertiesGroup);
                }
                if (key == EsbViewsRepository.FaultMediator.Properties.faultCodeExpression) {
                    return createFaultCodeExpressionText(widgetFactory, parent);
                }
				if (key == EsbViewsRepository.FaultMediator.Properties.faultDetailExpression) {
                    return createFaultDetailExpressionText(widgetFactory, filterDetailSubPropertiesGroup);
                }
				if (key == EsbViewsRepository.FaultMediator.Properties.faultReasonExpression) {
                    return createFaultReasonExpressionText(widgetFactory, filterReasonSubPropertiesGroup);
                }
				// End of user code
