
Tue Oct 13 17:52:38 IST 2020
================================================================================
Start of user code
				if (key == EsbViewsRepository.DefaultEndPoint.Basic.class) {
					return createBasicGroup(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Basic.commentsList) {
					return createCommentsListMultiValuedEditor(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Basic.endPointName) {
					return createEndPointNameText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Basic.anonymous) {
					return createAnonymousCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Basic.inLine) {
					return createInLineCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Basic.duplicate) {
					return createDuplicateCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Basic.reversed) {
					return createReversedCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Basic.format) {
					return createFormatEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Basic.templateParameters) {
					return createTemplateParametersTableComposition(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Basic.statisticsEnabled) {
					return createStatisticsEnabledCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Basic.traceEnabled) {
					return createTraceEnabledCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.EndpointSuspendState.class) {
					return createEndpointSuspendStateGroup(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.EndpointSuspendState.suspendErrorCodes) {
					return createSuspendErrorCodesText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.EndpointSuspendState.suspendInitialDuration) {
					return createSuspendInitialDurationText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.EndpointSuspendState.suspendMaximumDuration) {
					return createSuspendMaximumDurationText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.EndpointSuspendState.suspendProgressionFactor) {
					return createSuspendProgressionFactorText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.EndpointTimeoutState.class) {
					return createEndpointTimeoutStateGroup(widgetFactory, filterAdvancedSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.EndpointTimeoutState.retryErrorCodes) {
					return createRetryErrorCodesText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.EndpointTimeoutState.retryCount) {
					return createRetryCountText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.EndpointTimeoutState.retryDelay) {
					return createRetryDelayText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Misc.class) {
					return createMiscGroup(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Misc.properties) {
					return createPropertiesTableComposition(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Misc.optimize) {
					return createOptimizeEMFComboViewer(widgetFactory, filterAdvancedSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Misc.description) {
					return createDescriptionText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.QoS.class) {
					return createQoSGroup(widgetFactory, filterAdvancedSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.QoS.reliableMessagingEnabled) {
					return createReliableMessagingEnabledCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.QoS.securityEnabled) {
					return createSecurityEnabledCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.QoS.addressingEnabled) {
					return createAddressingEnabledCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.QoS.addressingSeparateListener) {
					return createAddressingSeparateListenerCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.QoS.addressingVersion) {
					return createAddressingVersionEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.QoS.reliableMessagingPolicy) {
					return createReliableMessagingPolicy(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.QoS.securityPolicy) {
					return createSecurityPolicy(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.QoS.inboundPolicy) {
					return createInboundPolicy(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.QoS.outboundPolicy) {
					return createOutboundPolicy(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Timeout.class) {
					return createTimeoutGroup(widgetFactory, filterAdvancedSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Timeout.timeOutDuration) {
					return createTimeOutDurationText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.Timeout.timeOutAction) {
					return createTimeOutActionEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.DefaultEndPoint.FailoverErrorCodes.class) {
                    return createFailoverErrorCodesGroup(widgetFactory, filterAdvancedSubPropertiesGroup);
                }
				if (key == EsbViewsRepository.DefaultEndPoint.FailoverErrorCodes.failoverNonRetryErrorCodes) {
                    return createFailoverNonRetryErrorCodesText(widgetFactory, parent);
                }
				// End of user code
