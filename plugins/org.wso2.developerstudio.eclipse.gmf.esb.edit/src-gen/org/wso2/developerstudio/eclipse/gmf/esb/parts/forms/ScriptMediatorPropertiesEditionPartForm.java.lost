
Tue Oct 13 17:52:41 IST 2020
================================================================================
Start of user code 
		propertiesStep.addStep(EsbViewsRepository.ScriptMediator.Properties.scriptLanguage);
		propertiesStep.addStep(EsbViewsRepository.ScriptMediator.Properties.scriptType);
		propertiesStep.addStep(EsbViewsRepository.ScriptMediator.Properties.mediateFunction);
		propertiesStep.addStep(EsbViewsRepository.ScriptMediator.Properties.scriptBody);
		propertiesStep.addStep(EsbViewsRepository.ScriptMediator.Properties.keyType);
		propertiesStep.addStep(EsbViewsRepository.ScriptMediator.Properties.scriptKeys);
		propertiesStep.addStep(EsbViewsRepository.ScriptMediator.Properties.scriptStaticKey);
		propertiesStep.addStep(EsbViewsRepository.ScriptMediator.Properties.scriptDynamicKey);
		propertiesStep.addStep(EsbViewsRepository.ScriptMediator.Properties.description);
		// End of user code
Start of user code for components addToPart creation
				if (key == EsbViewsRepository.ScriptMediator.Properties.class) {
					return createPropertiesGroup(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.ScriptMediator.Properties.description) {
					return createDescriptionText(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.ScriptMediator.Properties.commentsList) {
					return createCommentsListMultiValuedEditor(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.ScriptMediator.Properties.reverse) {
					return createReverseCheckbox(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.ScriptMediator.Properties.scriptType) {
					return createScriptTypeEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.ScriptMediator.Properties.scriptLanguage) {
					return createScriptLanguageEMFComboViewer(widgetFactory, parent);
				}
				if (key == EsbViewsRepository.ScriptMediator.Properties.mediateFunction) {
					return createMediateFunctionText(widgetFactory, filterScriptTypeSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.ScriptMediator.Properties.scriptBody) {
					return createScriptBodyText(widgetFactory, filterScriptTypeSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.ScriptMediator.Properties.keyType) {
					return createKeyTypeEMFComboViewer(widgetFactory, filterScriptTypeSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.ScriptMediator.Properties.scriptKeys) {
					return createScriptKeysTableComposition(widgetFactory, filterScriptTypeSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.ScriptMediator.Properties.scriptStaticKey) {
					return createScriptStaticKey(widgetFactory, filterScriptTypeSubPropertiesGroup);
				}
				if (key == EsbViewsRepository.ScriptMediator.Properties.scriptDynamicKey) {
					return createScriptDynamicKey(widgetFactory, filterScriptTypeSubPropertiesGroup);
				}
				// End of user code
